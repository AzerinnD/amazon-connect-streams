(()=>{var l;(l={772:()=>{!function(){var l=this||globalThis,Z=l.connect||{};l.connect=Z,l.globalConnect={},l.lily=Z,globalConnect.Container=null;var b=window.atob(""),d=function(l){this.id=l.region,l.region=this._normalizeRegionString(l.region),this.height=l.height,this.style=l.iframe_style,this.ccp=this._createFramedCcp(l)};d.prototype._createFramedCcp=function(l){var Z=Z||"microphone; autoplay; clipboard-write",b=this.style||"margin: 0; border: 0; padding: 0px; width: 0px; height: 0px",d=document.createElement("iframe");return d.srcdoc=this.getContent(l),d.allow=Z,d.id=this.id,d.style=b,d.scrolling="no",d},d.prototype.getContent=function(l){return["<!DOCTYPE html>","<meta charset='UTF-8'>","<html>","<head>","<script type='text/javascript'>",b,"<\/script>","<style>","html, body, iframe { width: 100%;height: 100%;margin: 0px;padding: 0px; border: 0px;}","</style>","</head>","<body>","<div id=containerDiv style='width: 100%;height: 100%;'></div>","<script type='text/javascript'>","function init() {","connect.core.initCCP(containerDiv,"+JSON.stringify(l)+");","}","<\/script>","</body>","</html>"].join("")},d.prototype._normalizeRegionString=function(l){const Z=l.indexOf(".");return-1===Z?l:l.substring(0,Z)},globalConnect.Container=d}()},341:()=>{!function(){var l=this||globalThis,Z=l.connect||{},b=l.globalConnect||{};l.connect=Z,l.globalConnect=b,l.lily=Z,b.core={};var d="globalCCP",c="465px";b.extractCcpRegionParams=function(l,b){Z.assertNotNull(b.standByRegion,"ccpBackupResource"),Z.assertNotNull(b.standByRegion.ccpUrl,"ccpUrl"),Z.assertNotNull(b.standByRegion.region,"region"),b.pollForFailover&&(Z.assertNotNull(b.loginUrl,"loginUrl"),Z.assertNotNull(b.instanceArn,"primary ARN"),b.otherArn=Z.assertNotNull(b.standByRegion.instanceArn,"backup ARN"));var d=b,W=Object.assign({},b,{ccpUrl:b.standByRegion.ccpUrl,region:b.standByRegion.region,instanceArn:b.standByRegion.instanceArn,otherArn:b.instanceArn,loginPopup:!1}),G=m(l);return parseInt(G.height)<=0&&(l.style.height=c,G.height=c),[d,W].map((function(l){return Z.assertNotNull(l.ccpUrl,"ccpUrl"),Z.assertNotNull(l.region,"region"),delete l.standByRegion,l.disasterRecoveryOn=!0,l.iframe_style="margin: 0; border: 0; padding:0px;width: 0px;height: 0px",l.height=G.height,l}))};var m=function(l){var Z=window.getComputedStyle(l);return{height:Z.getPropertyValue("height"),width:Z.getPropertyValue("width"),display:Z.getPropertyValue("display")}},W=function(l,d){if(Z.assertTrue("string"==typeof l,"Region provided "+l+" is not a valid string"),!(d||b.core.regions).hasOwnProperty(l)){var c="Region provided "+l+" is not found!";throw new Z.ValueError(c)}};b.core.initCCP=function(l,c){Z.assertNotNull(c.getPrimaryRegion,"getPrimaryRegion"),Z.assertTrue(Z.isFunction(c.getPrimaryRegion),"getPrimaryRegion must be a function");var m=c.getPrimaryRegion;delete c.getPrimaryRegion;var u=b.extractCcpRegionParams(l,c);m((function(m){return new Promise((R=>{var i;i=c.pollForFailover?m||c.region:Z.assertNotNull(m),b.core.regions=u.reduce((function(l,Z){return l[Z.region]={ccpParams:Z},l}),{});var p=u.reduce((function(l,Z){return l[Z.instanceArn]=Z.region,l}),{});W(i,b.core.regions),b.core.primaryRegion=i,b.core.secondaryRegion=Object.keys(b.core.regions).find((function(l){return l!=b.core.primaryRegion}));var Y=u.map((function(l){return l.region===b.core.primaryRegion&&(l.isPrimary=!0),new b.Container(l)})),y=Y.map((function(l){return l.ccp.outerHTML})),h=document.createElement("iframe");h.style="margin: 0; border: 0; padding:0px;width: 100%;height: 100%",h.allow="microphone; camera; autoplay; clipboard-write; identity-credentials-get",h.id=d,h.scrolling="no",h.onload=function(){X(b.core.primaryRegion),V(b.core.secondaryRegion),Y.map((function(l){var Z=h.contentDocument.getElementById(l.id),d=Z.contentDocument,m=Z.contentWindow;c.additionalScripts&&Array.isArray(c.additionalScripts)&&c.additionalScripts.forEach((l=>{var Z=d.createElement("script");Z.src=l,d.body.appendChild(Z)})),m.init();var W=m.connect;b.core.regions[l.id].connect=W,W.core.getUpstream().onUpstream(W.DisasterRecoveryEvents.FAILOVER,(function(Z){if(Z.nextActiveArn&&b.core.secondaryRegion===p[Z.nextActiveArn])G(p[Z.nextActiveArn],b.core.primaryRegion);else{if(!1!==Z.isPrimary||l.id!==b.core.primaryRegion)return;G(b.core.secondaryRegion,l.id)}delete b._failoverPending,b._triggerFailoverCompleteHandlers({activeRegion:b.core.primaryRegion,activeCcpUrl:b.core.regions[b.core.primaryRegion].ccpParams.ccpUrl})})),W.core.getUpstream().onUpstream(W.DisasterRecoveryEvents.FAILOVER_PENDING,(function({nextActiveArn:l}){b._failoverPending||(b._triggerFailoverPendingHandlers({nextActiveArn:l}),b._failoverPending=!0)})),l.id===b.core.primaryRegion&&(window.connect=W),b._triggerInitHandlers(W,l.id)})),R(b.core.regions[b.core.primaryRegion].connect)},h.srcdoc=["<!DOCTYPE html>","<meta charset='UTF-8'>","<html>","<head>","<style>","html, body { width: 100%;height: 100%;margin: 0px;padding: 0px; border: 0px;}","</style>","</head>","<body>",y.join(""),"</body>","</html>"].join(""),l.appendChild(h)}))}),(function(l){console.error("[Disaster Recovery] An error occured, while attempting to retrieve your primary region;"),l()}))};var G=function(l,Z){b.core.primaryRegion=l,b.core.secondaryRegion=Z,window.connect=b.core.regions[l].connect,b.core.activate(l),X(l),V(Z)},V=function(l){document.getElementById(d).contentDocument.getElementById(l).style="height: 0; width: 0; border: 0px"},X=function(l){document.getElementById(d).contentDocument.getElementById(l).style="height:100%;width:100%;border:0px"};b.core.onInit=function(l){b.core._onInitHandlers=b.core._onInitHandlers||{};const d=Z.randomId();return b.core._onInitHandlers[d]=l,()=>delete b.core._onInitHandlers[d]},b._triggerInitHandlers=function(l,Z){const d=b.core._onInitHandlers;d&&Object.values(d).forEach((b=>b(l,Z)))},b.core.onFailoverComplete=function(l){b.core._failoverCompleteHandlers=b.core._failoverCompleteHandlers||{};const d=Z.randomId();return b.core._failoverCompleteHandlers[d]=l,()=>delete b.core._failoverCompleteHandlers[d]},b._triggerFailoverCompleteHandlers=function(l){const Z=b.core._failoverCompleteHandlers;Z&&Object.values(Z).forEach((Z=>Z(l)))},b.core.onFailoverPending=function(l){b.core._failoverPendingHandlers=b.core._failoverPendingHandlers||{};const d=Z.randomId();return b.core._failoverPendingHandlers[d]=l,()=>delete b.core._failoverPendingHandlers[d]},b._triggerFailoverPendingHandlers=function(l){const Z=b.core._failoverPendingHandlers;Z&&Object.values(Z).forEach((Z=>Z(l)))},b.core.downloadLogs=function(l){if(!(b.core.regions&&b.core.regions[b.core.primaryRegion]&&b.core.regions[b.core.primaryRegion].connect))throw new Error("CCP is not initialized yet. Please call initCCP() first and wait until the getPrimaryRegion promise resolves.");Object.entries(b.core.regions).forEach((([Z,{connect:b}])=>{const d=`${Z}-${l&&l.logName||"agent-log"}`;b.getLog().download({logName:d,filterByLogLevel:l&&l.filterByLogLevel})}))},b.core.failover=function(l){b.core.failoverTo(b.core.secondaryRegion,l)},b.core.failoverTo=function(l,d){W(l),l===b.core.primaryRegion?Z.getLog().info(`[Disaster Recovery] Ignoring request to fail over to region ${l} since it is already the currently active region.`).sendInternalLogToServer():b.core.deactivate(b.core.primaryRegion,d)},b.core.deactivate=function(l,Z){var d=b.core.regions[l].connect;d.getLog().info("[Disaster Recovery] Deactivating %s region.",l).sendInternalLogToServer(),d.core.suppressContacts&&d.core.forceOffline?(d.core.suppressContacts(!0),d.core.forceOffline({softFailover:Z})):d.getLog().error("[Disaster Recovery] CCP did not load successfully for region %s; unable to deactivate region",l)},b.core.activate=function(l){var Z=b.core.regions[l].connect;Z.getLog().info("[Disaster Recovery] Activating %s region.",l).sendInternalLogToServer(),Z.core.suppressContacts?Z.core.suppressContacts(!1):Z.getLog().error("[Disaster Recovery] CCP did not load successfully for region %s; unable to activate region",l)}}()},163:function(){!function(l){function Z(l,Z){var b=(65535&l)+(65535&Z);return(l>>16)+(Z>>16)+(b>>16)<<16|65535&b}function b(l,b,d,c,m,W){return Z((G=Z(Z(b,l),Z(c,W)))<<(V=m)|G>>>32-V,d);var G,V}function d(l,Z,d,c,m,W,G){return b(Z&d|~Z&c,l,Z,m,W,G)}function c(l,Z,d,c,m,W,G){return b(Z&c|d&~c,l,Z,m,W,G)}function m(l,Z,d,c,m,W,G){return b(Z^d^c,l,Z,m,W,G)}function W(l,Z,d,c,m,W,G){return b(d^(Z|~c),l,Z,m,W,G)}function G(l,b){var G,V,X,u,R;l[b>>5]|=128<<b%32,l[14+(b+64>>>9<<4)]=b;var i=1732584193,p=-271733879,Y=-1732584194,y=271733878;for(G=0;G<l.length;G+=16)V=i,X=p,u=Y,R=y,i=d(i,p,Y,y,l[G],7,-680876936),y=d(y,i,p,Y,l[G+1],12,-389564586),Y=d(Y,y,i,p,l[G+2],17,606105819),p=d(p,Y,y,i,l[G+3],22,-1044525330),i=d(i,p,Y,y,l[G+4],7,-176418897),y=d(y,i,p,Y,l[G+5],12,1200080426),Y=d(Y,y,i,p,l[G+6],17,-1473231341),p=d(p,Y,y,i,l[G+7],22,-45705983),i=d(i,p,Y,y,l[G+8],7,1770035416),y=d(y,i,p,Y,l[G+9],12,-1958414417),Y=d(Y,y,i,p,l[G+10],17,-42063),p=d(p,Y,y,i,l[G+11],22,-1990404162),i=d(i,p,Y,y,l[G+12],7,1804603682),y=d(y,i,p,Y,l[G+13],12,-40341101),Y=d(Y,y,i,p,l[G+14],17,-1502002290),i=c(i,p=d(p,Y,y,i,l[G+15],22,1236535329),Y,y,l[G+1],5,-165796510),y=c(y,i,p,Y,l[G+6],9,-1069501632),Y=c(Y,y,i,p,l[G+11],14,643717713),p=c(p,Y,y,i,l[G],20,-373897302),i=c(i,p,Y,y,l[G+5],5,-701558691),y=c(y,i,p,Y,l[G+10],9,38016083),Y=c(Y,y,i,p,l[G+15],14,-660478335),p=c(p,Y,y,i,l[G+4],20,-405537848),i=c(i,p,Y,y,l[G+9],5,568446438),y=c(y,i,p,Y,l[G+14],9,-1019803690),Y=c(Y,y,i,p,l[G+3],14,-187363961),p=c(p,Y,y,i,l[G+8],20,1163531501),i=c(i,p,Y,y,l[G+13],5,-1444681467),y=c(y,i,p,Y,l[G+2],9,-51403784),Y=c(Y,y,i,p,l[G+7],14,1735328473),i=m(i,p=c(p,Y,y,i,l[G+12],20,-1926607734),Y,y,l[G+5],4,-378558),y=m(y,i,p,Y,l[G+8],11,-2022574463),Y=m(Y,y,i,p,l[G+11],16,1839030562),p=m(p,Y,y,i,l[G+14],23,-35309556),i=m(i,p,Y,y,l[G+1],4,-1530992060),y=m(y,i,p,Y,l[G+4],11,1272893353),Y=m(Y,y,i,p,l[G+7],16,-155497632),p=m(p,Y,y,i,l[G+10],23,-1094730640),i=m(i,p,Y,y,l[G+13],4,681279174),y=m(y,i,p,Y,l[G],11,-358537222),Y=m(Y,y,i,p,l[G+3],16,-722521979),p=m(p,Y,y,i,l[G+6],23,76029189),i=m(i,p,Y,y,l[G+9],4,-640364487),y=m(y,i,p,Y,l[G+12],11,-421815835),Y=m(Y,y,i,p,l[G+15],16,530742520),i=W(i,p=m(p,Y,y,i,l[G+2],23,-995338651),Y,y,l[G],6,-198630844),y=W(y,i,p,Y,l[G+7],10,1126891415),Y=W(Y,y,i,p,l[G+14],15,-1416354905),p=W(p,Y,y,i,l[G+5],21,-57434055),i=W(i,p,Y,y,l[G+12],6,1700485571),y=W(y,i,p,Y,l[G+3],10,-1894986606),Y=W(Y,y,i,p,l[G+10],15,-1051523),p=W(p,Y,y,i,l[G+1],21,-2054922799),i=W(i,p,Y,y,l[G+8],6,1873313359),y=W(y,i,p,Y,l[G+15],10,-30611744),Y=W(Y,y,i,p,l[G+6],15,-1560198380),p=W(p,Y,y,i,l[G+13],21,1309151649),i=W(i,p,Y,y,l[G+4],6,-145523070),y=W(y,i,p,Y,l[G+11],10,-1120210379),Y=W(Y,y,i,p,l[G+2],15,718787259),p=W(p,Y,y,i,l[G+9],21,-343485551),i=Z(i,V),p=Z(p,X),Y=Z(Y,u),y=Z(y,R);return[i,p,Y,y]}function V(l){var Z,b="",d=32*l.length;for(Z=0;Z<d;Z+=8)b+=String.fromCharCode(l[Z>>5]>>>Z%32&255);return b}function X(l){var Z,b=[];for(b[(l.length>>2)-1]=void 0,Z=0;Z<b.length;Z+=1)b[Z]=0;var d=8*l.length;for(Z=0;Z<d;Z+=8)b[Z>>5]|=(255&l.charCodeAt(Z/8))<<Z%32;return b}function u(l){var Z,b,d="0123456789abcdef",c="";for(b=0;b<l.length;b+=1)Z=l.charCodeAt(b),c+=d.charAt(Z>>>4&15)+d.charAt(15&Z);return c}function R(l){return unescape(encodeURIComponent(l))}function i(l){return function(l){return V(G(X(l),8*l.length))}(R(l))}function p(l,Z){return function(l,Z){var b,d,c=X(l),m=[],W=[];for(m[15]=W[15]=void 0,c.length>16&&(c=G(c,8*l.length)),b=0;b<16;b+=1)m[b]=909522486^c[b],W[b]=1549556828^c[b];return d=G(m.concat(X(Z)),512+8*Z.length),V(G(W.concat(d),640))}(R(l),R(Z))}(this||globalThis).md5=function(l,Z,b){return Z?b?p(Z,l):u(p(Z,l)):b?i(l):u(i(l))}}()},944:()=>{!function(){var l=this||globalThis,Z=function(){return Z.cache.hasOwnProperty(arguments[0])||(Z.cache[arguments[0]]=Z.parse(arguments[0])),Z.format.call(null,Z.cache[arguments[0]],arguments)};function b(l){return Object.prototype.toString.call(l).slice(8,-1).toLowerCase()}function d(l,Z){for(var b=[];Z>0;b[--Z]=l);return b.join("")}Z.format=function(l,c){var m,W,G,V,X,u,R,i=1,p=l.length,Y="",y=[];for(W=0;W<p;W++)if("string"===(Y=b(l[W])))y.push(l[W]);else if("array"===Y){if((V=l[W])[2])for(m=c[i],G=0;G<V[2].length;G++){if(!m.hasOwnProperty(V[2][G]))throw Z('[sprintf] property "%s" does not exist',V[2][G]);m=m[V[2][G]]}else m=V[1]?c[V[1]]:c[i++];if(/[^s]/.test(V[8])&&"number"!=b(m))throw Z("[sprintf] expecting number but found %s",b(m));switch(V[8]){case"b":m=m.toString(2);break;case"c":m=String.fromCharCode(m);break;case"d":m=parseInt(m,10);break;case"e":m=V[7]?m.toExponential(V[7]):m.toExponential();break;case"f":m=V[7]?parseFloat(m).toFixed(V[7]):parseFloat(m);break;case"o":m=m.toString(8);break;case"s":m=(m=String(m))&&V[7]?m.substring(0,V[7]):m;break;case"u":m>>>=0;break;case"x":m=m.toString(16);break;case"X":m=m.toString(16).toUpperCase()}m=/[def]/.test(V[8])&&V[3]&&m>=0?"+"+m:m,u=V[4]?"0"==V[4]?"0":V[4].charAt(1):" ",R=V[6]-String(m).length,X=V[6]?d(u,R):"",y.push(V[5]?m+X:X+m)}return y.join("")},Z.cache={},Z.parse=function(l){for(var Z=l,b=[],d=[],c=0;Z;){if(null!==(b=/^[^\x25]+/.exec(Z)))d.push(b[0]);else if(null!==(b=/^\x25{2}/.exec(Z)))d.push("%");else{if(null===(b=/^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-fosuxX])/.exec(Z)))throw"[sprintf] huh?";if(b[2]){c|=1;var m=[],W=b[2],G=[];if(null===(G=/^([a-z_][a-z_\d]*)/i.exec(W)))throw"[sprintf] huh?";for(m.push(G[1]);""!==(W=W.substring(G[0].length));)if(null!==(G=/^\.([a-z_][a-z_\d]*)/i.exec(W)))m.push(G[1]);else{if(null===(G=/^\[(\d+)\]/.exec(W)))throw"[sprintf] huh?";m.push(G[1])}b[2]=m}else c|=2;if(3===c)throw"[sprintf] mixing positional and named placeholders is not (yet) supported";d.push(b)}Z=Z.substring(b[0].length)}return d},l.sprintf=Z,l.vsprintf=function(l,b,d){return(d=b.slice(0)).splice(0,0,l),Z.apply(null,d)}}()},891:()=>{!function(){var l=this||globalThis,Z=l.connect||{};l.connect=Z,l.lily=Z;var b=navigator.userAgent,d=["bubbles","cancelBubble","cancelable","composed","data","defaultPrevented","eventPhase","isTrusted","lastEventId","origin","returnValue","timeStamp","type"];Z.sprintf=l.sprintf,Z.vsprintf=l.vsprintf,delete l.sprintf,delete l.vsprintf,Z.HTTP_STATUS_CODES={SUCCESS:200,UNAUTHORIZED:401,ACCESS_DENIED:403,TOO_MANY_REQUESTS:429,INTERNAL_SERVER_ERROR:500},Z.TRANSPORT_TYPES={CHAT_TOKEN:"chat_token",WEB_SOCKET:"web_socket",AGENT_DISCOVERY:"agent_discovery",WEB_RTC:"web_rtc"},Z.hitch=function(){var l=Array.prototype.slice.call(arguments),b=l.shift(),d=l.shift();return Z.assertNotNull(b,"scope"),Z.assertNotNull(d,"method"),Z.assertTrue(Z.isFunction(d),"method must be a function"),function(){var Z=Array.prototype.slice.call(arguments);return d.apply(b,l.concat(Z))}},Z.isFunction=function(l){return!!(l&&l.constructor&&l.call&&l.apply)},Z.isArray=function(l){return"[object Array]"===Object.prototype.toString.call(l)},Z.keys=function(l){var b=[];for(var d in Z.assertNotNull(l,"map"),l)b.push(d);return b},Z.values=function(l){var b=[];for(var d in Z.assertNotNull(l,"map"),l)b.push(l[d]);return b},Z.entries=function(l){var Z=[];for(var b in l)Z.push({key:b,value:l[b]});return Z},Z.merge=function(){var l=Array.prototype.slice.call(arguments,0),b={};return l.forEach((function(l){Z.entries(l).forEach((function(l){b[l.key]=l.value}))})),b},Z.now=function(){return(new Date).getTime()},Z.find=function(l,Z){for(var b=0;b<l.length;b++)if(Z(l[b]))return l[b];return null},Z.contains=function(l,b){return l instanceof Array?null!=Z.find(l,(function(l){return l===b})):b in l},Z.containsValue=function(l,b){return l instanceof Array?null!=Z.find(l,(function(l){return l===b})):null!=Z.find(Z.values(l),(function(l){return l===b}))},Z.randomId=function(){return Z.sprintf("%s-%s",Z.now(),Math.random().toString(36).slice(2))},Z.makeEnum=function(l){var Z={};return l.forEach((function(l){var b=l.replace(/\.?([a-z]+)_?/g,(function(l,Z){return Z.toUpperCase()+"_"})).replace(/_$/,"");Z[b]=l})),Z},Z.makeNamespacedEnum=function(l,b){var d=Z.makeEnum(b);return Z.keys(d).forEach((function(b){d[b]=Z.sprintf("%s::%s",l,d[b])})),d},Z.makeGenericNamespacedEnum=function(l,b,d){var c=Z.makeEnum(b);return Z.keys(c).forEach((function(b){c[b]=Z.sprintf("%s"+d+"%s",l,c[b])})),c},Z.isChromeBrowser=function(){return-1!==b.indexOf("Chrome")},Z.isFirefoxBrowser=function(){return-1!==b.indexOf("Firefox")},Z.isOperaBrowser=function(){return-1!==b.indexOf("Opera")},Z.isEdgeBrowser=function(){return-1!==b.indexOf("Edg")},Z.getChromeBrowserVersion=function(){var l=b.substring(b.indexOf("Chrome")+7);return l?parseFloat(l):-1},Z.getFirefoxBrowserVersion=function(){var l=b.substring(b.indexOf("Firefox")+8);return l?parseFloat(l):-1},Z.isValidLocale=function(l){return[{id:"en_US",label:"English"},{id:"de_DE",label:"Deutsch"},{id:"es_ES",label:"Español"},{id:"fr_FR",label:"Français"},{id:"ja_JP",label:"日本語"},{id:"it_IT",label:"Italiano"},{id:"ko_KR",label:"한국어"},{id:"pt_BR",label:"Português"},{id:"zh_CN",label:"中文(简体)"},{id:"zh_TW",label:"中文(繁體)"}].map((function(l){return l.id})).includes(l)},Z.getOperaBrowserVersion=function(){var l=b.indexOf("Opera"),Z=-1!==b.indexOf("Version")?b.substring(l+8):b.substring(l+6);return Z?parseFloat(Z):-1},Z.index=function(l,Z){var b={};return l.forEach((function(l){b[Z(l)]=l})),b},Z.set=function(l){var Z={};return l.forEach((function(l){Z[l]=1})),Z},Z.relativeComplement=function(l,b){var d={};return Z.keys(b).forEach((function(Z){Z in l||(d[Z]=b[Z])})),d},Z.assertTrue=function(l,b){if(!l)throw new Z.ValueError(b)},Z.assertNotNull=function(l,b){return Z.assertTrue(null!=l&&void 0!==typeof l,Z.sprintf("%s must be provided",b||"A value")),l},Z.deepcopy=function(l){return JSON.parse(JSON.stringify(l))},Z.deepcopyCrossOriginEvent=function(l){const b={};return d.forEach((d=>{try{b[d]=l[d]}catch(l){Z.getLog().info("deepcopyCrossOriginEvent failed on key: ",d).sendInternalLogToServer()}})),Z.deepcopy(b)},Z.getBaseUrl=function(){var b=l.location;return Z.sprintf("%s//%s:%s",b.protocol,b.hostname,b.port)},Z.getUrlWithProtocol=function(b){var d=l.location.protocol;return b.substr(0,d.length)!==d?Z.sprintf("%s//%s",d,b):b},Z.isFramed=function(){try{return window.self!==window.top}catch(l){return!0}},Z.hasOtherConnectedCCPs=function(){return Z.numberOfConnectedCCPs>1},Z.fetch=function(l,b,d,c){return c=c||5,d=d||1e3,b=b||{},new Promise((function(m,W){!function c(G){fetch(l,b).then((function(l){l.status===Z.HTTP_STATUS_CODES.SUCCESS?l.json().then((l=>m(l))).catch((()=>m({}))):1!==G&&(l.status>=Z.HTTP_STATUS_CODES.INTERNAL_SERVER_ERROR||l.status===Z.HTTP_STATUS_CODES.TOO_MANY_REQUESTS)?setTimeout((function(){c(--G)}),d):W(l)})).catch((function(l){W(l)}))}(c)}))},Z.fetchWithTimeout=async function(l,b,d,c,m){if(d=d||{},!b)return Z.fetch(l,d,c,m);const W=new AbortController,G=setTimeout((()=>W.abort()),b),V=await Z.fetch(l,{...d,signal:W.signal},c,m);return clearTimeout(G),V},Z.backoff=function(b,d,c,m){Z.assertTrue(Z.isFunction(b),"func must be a Function");var W=this;b({success:function(l){m&&m.success&&m.success(l)},failure:function(Z,G){if(c>0){var V=2*d*Math.random();l.setTimeout((function(){W.backoff(b,2*V,--c,m)}),V)}else m&&m.failure&&m.failure(Z,G)}})},Z.publishMetric=function(l){Z.core.getUpstream().sendUpstream(Z.EventType.BROADCAST,{event:Z.EventType.CLIENT_METRIC,data:l})},Z.publishSoftphoneStats=function(l){Z.core.getUpstream().sendUpstream(Z.EventType.BROADCAST,{event:Z.EventType.SOFTPHONE_STATS,data:l})},Z.publishSoftphoneReport=function(l){Z.core.getUpstream().sendUpstream(Z.EventType.BROADCAST,{event:Z.EventType.SOFTPHONE_REPORT,data:l})},Z.publishClickStreamData=function(l){Z.core.getUpstream().sendUpstream(Z.EventType.BROADCAST,{event:Z.EventType.CLICK_STREAM_DATA,data:l})},Z.publishClientSideLogs=function(l){Z.core.getEventBus().trigger(Z.EventType.CLIENT_SIDE_LOGS,l)},Z.addNamespaceToLogs=function(l){["log","error","warn","info","debug"].forEach((Z=>{const b=window.console[Z];window.console[Z]=function(){const Z=Array.from(arguments);Z.unshift(`[${l}]`),b.apply(window.console,Z)}}))},Z.PopupManager=function(){},Z.PopupManager.prototype.open=function(l,Z,b){var d=this._getLastOpenedTimestamp(Z),c=(new Date).getTime(),m=null;if(c-d>864e5){if(b){var W=b.height||578,G=b.width||433,V=b.top||0,X=b.left||0;(m=window.open("",Z,"width="+G+", height="+W+", top="+V+", left="+X)).location!==l&&(m=window.open(l,Z,"width="+G+", height="+W+", top="+V+", left="+X))}else(m=window.open("",Z)).location!==l&&(m=window.open(l,Z));this._setLastOpenedTimestamp(Z,c)}return m},Z.PopupManager.prototype.clear=function(Z){var b=this._getLocalStorageKey(Z);l.localStorage.removeItem(b)},Z.PopupManager.prototype._getLastOpenedTimestamp=function(Z){var b=this._getLocalStorageKey(Z),d=l.localStorage.getItem(b);return d?parseInt(d,10):0},Z.PopupManager.prototype._setLastOpenedTimestamp=function(Z,b){var d=this._getLocalStorageKey(Z);l.localStorage.setItem(d,""+b)},Z.PopupManager.prototype._getLocalStorageKey=function(l){return"connectPopupManager::"+l};var c=Z.makeEnum(["granted","denied","default"]);Z.NotificationManager=function(){this.queue=[],this.permission=c.DEFAULT},Z.NotificationManager.prototype.requestPermission=function(){var b=this;"Notification"in l?l.Notification.permission===c.DENIED?(Z.getLog().warn("The user has requested to not receive notifications.").sendInternalLogToServer(),this.permission=c.DENIED):this.permission!==c.GRANTED&&l.Notification.requestPermission().then((function(l){b.permission=l,l===c.GRANTED?b._showQueued():b.queue=[]})):(Z.getLog().warn("This browser doesn't support notifications.").sendInternalLogToServer(),this.permission=c.DENIED)},Z.NotificationManager.prototype.show=function(l,b){if(this.permission===c.GRANTED)return this._showImpl({title:l,options:b});if(this.permission===c.DENIED)Z.getLog().warn("Unable to show notification.").sendInternalLogToServer().withObject({title:l,options:b});else{var d={title:l,options:b};Z.getLog().warn("Deferring notification until user decides to allow or deny.").withObject(d).sendInternalLogToServer(),this.queue.push(d)}},Z.NotificationManager.prototype._showQueued=function(){var l=this,Z=this.queue.map((function(Z){return l._showImpl(Z)}));return this.queue=[],Z},Z.NotificationManager.prototype._showImpl=function(Z){var b=new l.Notification(Z.title,Z.options);return Z.options.clicked&&(b.onclick=function(){Z.options.clicked.call(b)}),b},Z.ValueError=function(){var l=Array.prototype.slice.call(arguments,0),b=l.shift(),d=new Error(Z.vsprintf(b,l));return Object.setPrototypeOf(d,Z.ValueError.prototype),d},Object.setPrototypeOf(Z.ValueError.prototype,Error.prototype),Object.setPrototypeOf(Z.ValueError,Error),Z.ValueError.prototype.name="ValueError",Z.NotImplementedError=function(){var l=Array.prototype.slice.call(arguments,0),b=l.shift(),d=new Error(Z.vsprintf(b,l));return Object.setPrototypeOf(d,Z.NotImplementedError.prototype),d},Object.setPrototypeOf(Z.NotImplementedError.prototype,Error.prototype),Object.setPrototypeOf(Z.NotImplementedError,Error),Z.NotImplementedError.prototype.name="NotImplementedError",Z.StateError=function(){var l=Array.prototype.slice.call(arguments,0),b=l.shift(),d=new Error(Z.vsprintf(b,l));return Object.setPrototypeOf(d,Z.StateError.prototype),d},Object.setPrototypeOf(Z.StateError.prototype,Error.prototype),Object.setPrototypeOf(Z.StateError,Error),Z.StateError.prototype.name="StateError",Z.VoiceIdError=function(l,Z,b){var d={};return d.type=l,d.message=Z,d.stack=Error(Z).stack,d.err=b,d},Z.isCCP=function(){return!!Z.core.upstream&&"ConnectSharedWorkerConduit"===Z.core.getUpstream().name},Z.isSharedWorker=function(){return Z.worker&&!!Z.worker.clientEngine},Z.isCRM=function(){return!!Z.core.upstream&&Z.core.getUpstream()instanceof Z.IFrameConduit}}()}})[944](),l[163](),l[891](),l[772](),l[341]()})();